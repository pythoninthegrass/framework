# code: language=ansible

---
- hosts: localhost
  connection: local
  become: true
  gather_facts: true
  # debugger: on_failed
  any_errors_fatal: true
  vars:
    os_environment:
      - key: EDITOR
        value: vim
  pre_tasks:
    - name: Install pip
      ansible.builtin.package:
        name: python3-pip
        state: present

    - name: Install jmespath
      ansible.builtin.pip:
        name: jmespath
        state: present
  tasks:
    - name: Read .env file
      ansible.builtin.slurp:
        src: ../vars/.env.json
      register: result

    - name: Users from .env file
      set_fact:
        users: "{{ (result.content | b64decode) | from_json | json_query('users[?name != \"\"].name') }}"
        keys: "{{ (result.content | b64decode) | from_json | json_query('users[?key != \"\"].key') }}"

    - name: Validate users and authorized_keys variables
      ansible.builtin.assert:
        that:
          - env_vars is defined
        fail_msg: "users variable is not defined or empty"
        quiet: true

    - name: Create groups from usernames
      ansible.builtin.group:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ users }}"

    - name: Create user
      ansible.builtin.user:
        name: "{{ item }}"
        groups: ["{{ item }}", wheel]
        state: present
        shell: /bin/bash
        create_home: true
      with_items:
        - "{{ users }}"

    - name: Add user public ssh key
      ansible.builtin.authorized_key:
        user: "{{ item.0 }}"
        key: "{{ item.1 }}"
        state: present
      with_together:
        - "{{ users }}"
        - "{{ keys }}"
      # tags: qa

    - name: Set vim as default sudoers editor
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^Defaults\s+env_reset'
        line: 'Defaults    env_reset,  editor="/usr/bin/vim", timestamp_timeout=30'
        validate: /usr/sbin/visudo -cf %s
      when: ansible_os_family == "RedHat"

    - name: Check if wheel nopasswd is enabled
      ansible.builtin.lineinfile:
        state: absent
        path: "/etc/sudoers"
        regexp: "%wheel ALL=(ALL) NOPASSWD: ALL"
      check_mode: true
      register: check
      when: ansible_os_family == "RedHat"
      tags: qa

    - name: Enable wheel nopasswd
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel ALL='
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: /usr/sbin/visudo -cf %s
      when: ansible_os_family == "RedHat" and check.found == 1
      tags: qa
