# code: language=ansible

---
- hosts: localhost
  connection: local
  gather_facts: true
  # debugger: on_failed
  any_errors_fatal: true
  vars:
    os_environment:
      - key: EDITOR
        value: vim
  pre_tasks:
    - name: Get running ansible user
      ansible.builtin.set_fact:
        local_user: "{{ lookup('env', 'USER') }}"
        home_dir: "{{ lookup('env', 'HOME') }}"
        work_dir: "{{ playbook_dir | dirname }}"
        cacheable: true
      tags: qa

    - name: Top-level directory in project
      ansible.builtin.shell: git rev-parse --show-toplevel
      register: tld
      tags: qa

    - name: Set tld stdout fact
      ansible.builtin.set_fact:
        tld: "{{ tld.stdout }}"
      tags: qa

    - name: Get OS release
      ansible.builtin.set_fact:
        os_release: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}"
        major_ver: "{{ ansible_distribution_major_version }}"
        distro: "{{ ansible_distribution }}"
      tags: qa

    - name: Generate ssh key
      ansible.builtin.openssh_keypair:
        path: "{{ home_dir }}/.ssh/id_rsa"
        size: 4096
        type: rsa
        comment: "{{ local_user }}@{{ ansible_fqdn }}"
        force: false
  tasks:
    - name: Create group from username
      ansible.builtin.group:
        name: "{{ item }}"
        state: present
      become: true
      with_items:
        - ansible

    - name: Create user
      ansible.builtin.user:
        name: "{{ item }}"
        groups: ["{{ item }}", wheel]
        state: present
        shell: /bin/bash
        create_home: false
      become: true
      with_items:
        - ansible

    - name: Generate ssh key for user
      ansible.builtin.openssh_keypair:
        path: "{{ home_dir }}/.ssh/ansible"
        size: 4096
        type: rsa
        comment: "{{ item }}@{{ ansible_fqdn }}"
        force: false
      with_items:
        - ansible

    # TODO: QA
    - name: Add user public ssh keys
      ansible.builtin.authorized_key:
        user: "{{ local_user }}"
        key: "{{ lookup('file', item) }}"
        state: present
      with_items:
        - "{{ home_dir }}/.ssh/ansible.pub"

    - name: Set vim as default sudoers editor
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^Defaults\s+env_reset'
        line: 'Defaults    env_reset,  editor="/usr/bin/vim", timestamp_timeout=30'
        validate: /usr/sbin/visudo -cf %s

    - name: Disable standard wheel group
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel\s+ALL=\(ALL\)\s+ALL$'
        firstmatch: true
        line: '# %wheel  ALL=(ALL)       ALL'
        validate: /usr/sbin/visudo -cf %s
      become: true

    - name: Enable wheel nopasswd
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^#\s%wheel\s+ALL=\(ALL\)\s+NOPASSWD:\s?ALL$'
        firstmatch: true
        line: '%wheel  ALL=(ALL)      NOPASSWD:ALL'
        validate: /usr/sbin/visudo -cf %s
      become: true
